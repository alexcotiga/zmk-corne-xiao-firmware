#include "zmk-helpers/helper.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sk { quick-release; };

// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift

ZMK_MOD_MORPH(smart_shft,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)

// Alt+Tab swapper, requires PR #1366
//ZMK_TRI_STATE(swapper,
//    bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
//    ignored-key-positions = <LT2>;
//)

&caps_word {
    /delete-property/ ignore-modifiers;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                    |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |                    |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |  MUTE  |  |        |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                    | ENT | RSE  | ALT |

            bindings = <
&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T                           &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp ESC  &kp A  &kp S  &kp D  &kp F  &kp G                           &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp DEL  &kp Z  &kp X  &kp C  &kp V  &kp B        &none  &kp C_MUTE  &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                       &mo 4  &mo 1  &smart_shft                     &kp SPACE  &mo 2  &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        NAV {
            // ------------------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |                    |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |                    | LFT | DWN |  UP | RGT |     |  F12 |
            // | SHFT | F1  | F2  | F3  | F4  | F5  |  boot  |  |        |  F6 | F7  | F8  | F9  | F10 |  F11 |
            //                    | GUI |     | SPC |                    | ENT |     | ALT |

            bindings = <
&trans  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                 &kp N6    &kp N7    &kp N8  &kp N9     &kp N0   &kp BSPC
&trans  &sk LSHFT  &sk LCTRL  &sk LALT  &sk LGUI  &trans                 &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &kp F12
&trans  &kp F1     &kp F2     &kp F3    &kp F4    &kp F5  &none  &trans  &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &kp F11
                              &trans    &trans    &trans                 &trans    &trans    &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_BRI_UP C_BRI_DEC>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        SYM {
            // ------------------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |                    |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |                    |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |        |  |  boot  |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |                    | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                 &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR   &kp RA(BSPC)
&kp LCTRL  &trans    &trans  &trans    &trans    &trans                    &kp MINUS  &sk RGUI  &sk RALT         &sk RCTRL  &sk RSHFT  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans     &none  &trans  &kp UNDER  &kp PLUS  &kp LBRC         &kp RBRC   &kp PIPE   &kp TILDE
                             &trans    &trans    &trans                    &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        NUM {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                   &kp NUMBER_6  &kp N7    &kp N8    &kp N9     &kp NUMBER_0  &trans
&trans  &sk LSHFT     &sk LCTRL     &sk LALT      &sk LGUI      &kp F11                  &kp F12       &sk RGUI  &sk RALT  &sk RCTRL  &sk RSHFT     &trans
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5   &trans  &trans  &kp F6        &kp F7    &kp F8    &kp F9     &kp F10       &trans
                                    &trans        &trans        &trans                   &trans        &trans    &trans
            >;
        };

        system {
            bindings = <
&bootloader  &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans  &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans        &trans        &trans                        &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        num_act {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
